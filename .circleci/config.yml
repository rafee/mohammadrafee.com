version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.15 # use the AWS S3 orb in your config

workflows: # Define a Workflow running the build job, then the deploy job
  version: 2
  build-deploy: # Make a workflow to build and deploy your project
    jobs:
      - build
      - deploy:
          requires:
            - build # Only run deploy job once the build job has completed
          filters:
            branches:
              only: master # Only deploy when the commit is on the Master branch

jobs: # Define the build and deploy jobs
  build:
    docker: # Use the Docker executor for the build job
      - image: cibuilds/hugo:latest # Specify the Docker image to use for the build job

    working_directory: ~/hugo
    environment:
      HUGO_BUILD_DIR: ~/hugo/public

    steps:
      # install git
      - run: apk update && apk add git

      # checkout the repository
      - checkout

      # install git submodules for managing third-party dependencies
      - run: git submodule sync && git submodule update --init

      - run:
          name: install AWS CLI (first install pip, the Python package manager)
          command: |
            apk add --update python python-dev py-pip build-base
            pip install awscli

      # build with Hugo
      - run: HUGO_ENV=production hugo -v -d $HUGO_BUILD_DIR

      - run:
          name: test our generated HTML files
          command: |
            htmlproofer $HUGO_BUILD_DIR --allow-hash-href --check-html \
            --empty-alt-ignore --disable-external
      # - aws-s3/copy:
      #     arguments: "--dry-run"
      #     from: $HUGO_BUILD_DIR
      #     # overwrite: true
      #     to: s3://www.mohammadrafee.com
  deploy:
    docker: # Use the Docker executor for the deploy job
      - image: cibuilds/hugo:latest # Specify the Docker image to use for the deploy job
    steps:
      - checkout
      - aws-s3/sync:
          from: $HUGO_BUILD_DIR
          to: "s3://www.mohammadrafee.com/"
          arguments: | # Optional arguments
            --acl public-read \
            --cache-control "max-age=86400"
          overwrite: true # default is false
